name: dotproj
services:
  migration:
    build:
      context: ./portal/
      dockerfile: Dockerfile
    command: ["python", "manage.py", "migrate"]
    environment:
      - DJANGO_SETTINGS_MODULE=portal.settings
      - POSTGRES_HOST=postgres
      - TIME_ZONE=America/Sao_Paulo
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./portal:/app

  server:
    build:
      context: ./portal/
      dockerfile: Dockerfile
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "portal.wsgi:application"]
    environment:
      - DJANGO_SETTINGS_MODULE=portal.settings
      - POSTGRES_HOST=postgres
      - TIME_ZONE=America/Sao_Paulo
    env_file:
      - .env
    ports:
      - "8081:8000"
    depends_on:
      migration:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    volumes:
      - ./portal:/app

  postgres:
    image: postgres:17-alpine
    environment:
      PGUSER: postgres
      POSTGRES_DB: dotproj
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'

  pgbouncer:
    image: edoburu/pgbouncer:latest # A common and reliable PgBouncer image
    environment:
      # PGBOUNCER_AUTH_TYPE: md5 # Or plain, or hba.md5 (more secure)
      # PGBOUNCER_AUTH_FILE: /etc/pgbouncer/userlist.txt # If using a userlist file
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      ADMIN_USERS: postgres
      AUTH_TYPE: scram-sha-256
      POOL_MODE: transaction
    ports:
      - "6432:5432" # PgBouncer's default port, change if 6432 is in use
    depends_on:
      postgres:
        condition: service_healthy

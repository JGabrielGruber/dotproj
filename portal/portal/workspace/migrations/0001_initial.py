# Generated by Django 5.2.3 on 2025-06-16 22:55

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('category_key', models.CharField(blank=True, max_length=255, null=True)),
                ('recurrence', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='weekly', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ChoreAssigned',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('doing', 'Doing'), ('cancelled', 'Cancelled'), ('done', 'Done')], default='pending', max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('closed', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='workspace.chore')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chore_assignments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChoreAssignmentSubmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('doing', 'Doing'), ('cancelled', 'Cancelled'), ('done', 'Done')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chore_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='workspace.choreassigned')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chore_submission_updates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChoreResponsible',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsibles', to='workspace.chore')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chore_responsibilities', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('manager', 'Manager'), ('user', 'User'), ('viewer', 'Viewer')], default='viewer', max_length=20)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='workspace.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_memberships', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('stage_key', models.CharField(blank=True, max_length=255, null=True)),
                ('category_key', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='workspace.task')),
            ],
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=255)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspaces', to='workspace.organization')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='workspace.workspace'),
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=255)),
                ('key', models.CharField(max_length=255)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='workspace.workspace')),
            ],
        ),
        migrations.AddField(
            model_name='chore',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chores', to='workspace.workspace'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=255)),
                ('emoji', models.CharField(default='', max_length=10)),
                ('key', models.CharField(max_length=255)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='workspace.workspace')),
            ],
        ),
        migrations.CreateModel(
            name='WorkspaceMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('manager', 'Manager'), ('user', 'User'), ('viewer', 'Viewer')], default='viewer', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspace_memberships', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='workspace.workspace')),
            ],
        ),
        migrations.CreateModel(
            name='WorkspaceInvite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('role', models.CharField(default='viewer', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='workspace.workspace')),
            ],
            options={
                'indexes': [models.Index(fields=['token'], name='workspace_w_token_376ce5_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='choreassigned',
            index=models.Index(fields=['chore', 'user', 'status'], name='workspace_c_chore_i_deaf5d_idx'),
        ),
        migrations.AddIndex(
            model_name='choreassigned',
            index=models.Index(fields=['assigned_at'], name='workspace_c_assigne_8c8b72_idx'),
        ),
        migrations.AddIndex(
            model_name='choreassigned',
            index=models.Index(fields=['chore', 'user', 'closed'], name='workspace_c_chore_i_2d37f9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='choreassigned',
            unique_together={('chore', 'user', 'assigned_at')},
        ),
        migrations.AddIndex(
            model_name='choreassignmentsubmission',
            index=models.Index(fields=['chore_assigned', 'submitted_at'], name='workspace_c_chore_a_d066d5_idx'),
        ),
        migrations.AddIndex(
            model_name='choreassignmentsubmission',
            index=models.Index(fields=['status'], name='workspace_c_status_820f45_idx'),
        ),
        migrations.AddIndex(
            model_name='choreresponsible',
            index=models.Index(fields=['chore', 'user'], name='workspace_c_chore_i_52e773_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='choreresponsible',
            unique_together={('chore', 'user')},
        ),
        migrations.AddIndex(
            model_name='organizationmember',
            index=models.Index(fields=['organization', 'user'], name='workspace_o_organiz_cc52e1_idx'),
        ),
        migrations.AddIndex(
            model_name='organizationmember',
            index=models.Index(fields=['role'], name='workspace_o_role_d92515_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='organizationmember',
            unique_together={('organization', 'user')},
        ),
        migrations.AddIndex(
            model_name='taskcomment',
            index=models.Index(fields=['task', 'created_at'], name='workspace_t_task_id_b9f8d5_idx'),
        ),
        migrations.AddIndex(
            model_name='workspace',
            index=models.Index(fields=['label'], name='workspace_w_label_b134fb_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['workspace', 'stage_key'], name='workspace_t_workspa_c3d888_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['owner'], name='workspace_t_owner_i_7cf400_idx'),
        ),
        migrations.AddIndex(
            model_name='stage',
            index=models.Index(fields=['workspace', 'key'], name='workspace_s_workspa_094541_idx'),
        ),
        migrations.AddConstraint(
            model_name='stage',
            constraint=models.UniqueConstraint(fields=('workspace', 'key'), name='unique_workspace_stage_key'),
        ),
        migrations.AddIndex(
            model_name='chore',
            index=models.Index(fields=['workspace'], name='workspace_c_workspa_19ad0a_idx'),
        ),
        migrations.AddIndex(
            model_name='chore',
            index=models.Index(fields=['recurrence'], name='workspace_c_recurre_4b778b_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['workspace', 'key'], name='workspace_c_workspa_ef7848_idx'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('workspace', 'key'), name='unique_workspace_category_key'),
        ),
        migrations.AddIndex(
            model_name='workspacemember',
            index=models.Index(fields=['workspace', 'user'], name='workspace_w_workspa_7c87f0_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacemember',
            index=models.Index(fields=['role'], name='workspace_w_role_e8edba_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='workspacemember',
            unique_together={('workspace', 'user')},
        ),
    ]
